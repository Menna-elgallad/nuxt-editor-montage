.fadeInSlide {
animation: fadeInSlide 1s ease forwards 0.3s;
}
@keyframes fadeInSlide {
from {
    opacity: 0;
    transform: translate3d(10%, 10%, 0);
}
to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
}
}

.fade {
animation: fade 1s ease forwards;
}

@keyframes fade {
to {
    opacity: 0.25;
}
}

/**
* Settings
*/

$nuxt-animation-duration: 1s !default;
$nuxt-animation-delay: 0.1s !default;
$nuxt-slide-offset: 100% !default;
$nuxt-zoom-in-scale: 0.5 !default;
$nuxt-zoom-out-scale: 1.1 !default;
$nuxt-zoom-out-scale-lg: 1.5 !default;
$nuxt-flip-rotate: 91deg !default;

/**
    * Easings
    */

$nuxt-easings: (
linear: linear,
ease: ease,
ease-in: ease-in,
ease-out: ease-out,
ease-in-out: ease-in-out,
ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19),
ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1),
ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1),
ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335),
ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1),
ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86),
ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035),
ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1),
ease-in-out-expo: cubic-bezier(1, 0, 0, 1),
ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53),
ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94),
ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955),
ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22),
ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1),
ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1),
ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06),
ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1),
ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1),
ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715),
ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1),
ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95),
ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045),
ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275),
ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55),
);

/**
    * Core
    */

[data-nuxt] {
transition-duration: $nuxt-animation-duration;
transition-delay: $nuxt-animation-delay;
transition-duration: var(--nuxt-duration, $nuxt-animation-duration);
transition-delay: var(--nuxt-delay, $nuxt-animation-delay);
transition-timing-function: var(
    --nuxt-easing,
    map-get($nuxt-easings, "ease")
);
}

@for $i from 4 through 40 {
[data-nuxt][data-nuxt-duration="#{$i * 50}"] {
    transition-duration: #{$i * 0.05}s;
}
}

@for $i from 1 through 20 {
[data-nuxt][data-nuxt-delay="#{$i * 50}"] {
    transition-delay: #{$i * 0.05}s;
}
}

@each $key, $value in $nuxt-easings {
[data-nuxt][data-nuxt-easing="#{$key}"] {
    transition-timing-function: $value;
}
}

/**
    * Animations
    */

// Fade
[data-nuxt|="fade"] {
opacity: 0;
transition-property: opacity;
}

[data-nuxt|="fade"].nuxt-animate,
body.nuxt-disabled [data-nuxt|="fade"] {
opacity: 1;
}

// Slide
[data-nuxt|="slide"] {
opacity: 0;
transition-property: opacity, transform;
}

[data-nuxt="slide-up"] {
transform: translateY($nuxt-slide-offset);
}

[data-nuxt="slide-down"] {
transform: translateY(-$nuxt-slide-offset);
}

[data-nuxt="slide-left"] {
transform: translateX($nuxt-slide-offset);
}

[data-nuxt="slide-right"] {
transform: translateX(-$nuxt-slide-offset);
}
[data-nuxt="slide-up-md"] {
transform: translateY(50px);
}
[data-nuxt="slide-up-lg"] {
transform: translateY(100px);
}

[data-nuxt|="slide"].nuxt-animate,
body.nuxt-disabled [data-nuxt|="slide"] {
opacity: 1;
transform: none;
}

// Zoom
[data-nuxt|="zoom"] {
opacity: 0;
transition-property: opacity, transform;
}

[data-nuxt="zoom-in"] {
transform: scale($nuxt-zoom-in-scale);
}

[data-nuxt="zoom-out"] {
transform: scale($nuxt-zoom-out-scale);
}
[data-nuxt="zoom-out-lg"] {
transform: scale($nuxt-zoom-out-scale-lg);
}

[data-nuxt|="zoom"].nuxt-animate,
body.nuxt-disabled [data-nuxt|="zoom"] {
opacity: 1;
transform: none;
}

// Flip
[data-nuxt|="flip"] {
backface-visibility: hidden;
transition-property: transform;
}

[data-nuxt="flip-left"] {
transform: perspective(2000px) rotateY(-$nuxt-flip-rotate);
}

[data-nuxt="flip-right"] {
transform: perspective(2000px) rotateY($nuxt-flip-rotate);
}

[data-nuxt="flip-up"] {
transform: perspective(2000px) rotateX(-$nuxt-flip-rotate);
}

[data-nuxt="flip-down"] {
transform: perspective(2000px) rotateX($nuxt-flip-rotate);
}

[data-nuxt|="flip"].nuxt-animate,
body.nuxt-disabled [data-nuxt|="flip"] {
transform: none;
}
